{"version":3,"sources":["constants/authentificationModalVisibiltyFilters.js","actions/authentificationModalAction.js","actions/actionTypes.js","containers/FilterModalLink.js","components/layout/Header.js","components/layout/Layout.js","components/homepage/Homepage.js","constants/paths.js","components/Icons.js","validation/FormValidator.js","components/authentification/LogIn.js","constants/roles.js","components/authentification/ChooseRoleModal.js","components/authentification/RegisterRestaurantowner.js","components/authentification/FillRestaurantInfo.js","components/authentification/RegisterCustomer.js","containers/AuthentficationModal.js","App.js","serviceWorker.js","reducers/authentificationModalVisibilityFilterReducer.js","actions/logInRegisterActions.js","reducers/rootReducer.js","reducers/loginRegisterReducer.js","store/configureStore.js","index.js"],"names":["authentificationModalVisibilityFilters","SHOW_LOGIN","SHOW_CHOOSE_ROLE","SHOW_REGISTER_RESTAURANT_OWNER","SHOW_RESTAURANT_INFORMATION","SHOW_REGISTER_CUSTOMER","HIDE_ALL","setAuthentificatonModalVisibilityFilterAction","filter","type","connect","state","ownProps","active","authentificationModalVisibilityFilter","dispatch","onClick","children","Header","className","to","src","alt","Layout","this","props","Component","Homepage","paths","restApi","registrationRestaurantOwner","registrationCustomer","login","IconName","width","height","viewBox","fill","xmlns","d","IconLocation","IconBirthday","IconEmail","IconPassword","IconExit","IconBack","fillRule","clipRule","FormValidator","validations","validation","valid","forEach","rule","field","isInvalid","field_value","toString","args","method","validator","validWhen","message","isValid","map","LogIn","handleSubmit","event","preventDefault","values","form","getValues","setState","username","password","isRestaurantOwner","validate","submitted","thisTemp","console","log","ajax","url","headers","body","subscribe","next","error","alert","complete","onHide","activateIsRestaurantOwner","deactivateIsRestaurantOwner","bind","Modal","Body","ref","c","onSubmit","DropdownButton","id","title","Dropdown","Item","name","placeholder","roles","RESTAURANT_OWNER","CUSTOMER","ChooseRoleModal","RegisterRestaurantowner","passwordMatch","confirmation","email","firstName","surname","confirmPassword","e","role","FillRestaurantInfo","RegisterCustomer","AuthentificationModal","getVisibleModal","handleClose","show","centered","App","exact","path","component","HomePage","Boolean","window","location","hostname","match","authentificationModalVisibiltyFilterReducer","action","REGISTERING_ATTEMPTING","REGISTERING_FAILING","REGISTERING_SUCCESSING","LOGGING_IN_ATTEMPTING","LOGGING_IN_FAILING","LOGGING_IN_SUCCESSING","LOGGING_OUT","rootReducer","combineReducers","logInRegisterReducer","LogInRegisterActions","Object","assign","lastName","nationality","birthday","eMail","activePageState","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","configureStore","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.211d9276.chunk.js","sourcesContent":["export const authentificationModalVisibilityFilters = {\n    SHOW_LOGIN: 'SHOW_LOGIN',\n    SHOW_CHOOSE_ROLE: 'SHOW_CHOOSE_ROLE',\n    SHOW_REGISTER_RESTAURANT_OWNER: 'SHOW_REGISTER_RESTAURANT_OWNER',\n    SHOW_RESTAURANT_INFORMATION: \"SHOW_RESTAURANT_INFORMATION\",\n    SHOW_REGISTER_CUSTOMER: 'SHOW_REGISTER_CUSTOMER',\n    HIDE_ALL: 'HIDE_ALL'\n}","import * as types from \"./actionTypes\";\n\nexport const setAuthentificatonModalVisibilityFilterAction = filter => ({\n    type: types.SET_AUTHENTIFICATION_MODAL_VISIBILITY_FILTER,\n    filter\n});\n","export const REGISTERING_ATTEMPTING = 'REGISTERING_ATTEMPTING';\nexport const REGISTERING_FAILING = 'REGISTERING_FAILING';\nexport const REGISTERING_SUCCESSING = 'REGISTERING_SUCCESSING';\nexport const LOGGING_IN_ATTEMPTING = 'LOGGING_IN_ATTEMPTING';\nexport const LOGGING_IN_FAILING = 'LOGGING_IN_FAILING';\nexport const LOGGING_IN_SUCCESSING = 'LOGGING_IN_SUCCESSING';\nexport const LOGGING_OUT = 'LOGGING_OUT';\n\n\nexport const SET_AUTHENTIFICATION_MODAL_VISIBILITY_FILTER = 'SET_AUTHENTIFICATION_MODAL_VISIBILITY_FILTER';\n\nexport const FETCH_USERS = \"FETCH_USERS\";\nexport const FETCH_USER = \"FETCH_USER\";\n","import { connect } from 'react-redux'\nimport { setAuthentificatonModalVisibilityFilterAction } from '../actions/authentificationModalAction'\nimport React from \"react\";\n\n\nconst mapStateToProps = (state, ownProps) => ({\n    active: ownProps.filter === state.authentificationModalVisibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    onClick: () => dispatch(setAuthentificatonModalVisibilityFilterAction(ownProps.filter))\n})\n\nconst FilterModalLink = ({ active, children, onClick }) => (\n    <span\n        onClick={onClick}\n    >\n        {children}\n    </span>\n)\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FilterModalLink)","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {authentificationModalVisibilityFilters} from \"../../constants/authentificationModalVisibiltyFilters\";\n\n\nimport FilterLink from \"../../containers/FilterModalLink\";\n\nconst Header = () => {\n    return (\n        <header>\n            <div className=\"container\">\n                <nav>\n                    <Link to=\"/\" className=\"logo\">\n                        <img className=\"site-logo\" src=\"/images/thespoon_logo_white.png\" alt=\"logo\" />\n                    </Link>\n                    <ul>\n                        <li>\n                            <FilterLink filter={authentificationModalVisibilityFilters.SHOW_LOGIN}>Log in</FilterLink>\n                        </li>\n                        <li>\n                            <FilterLink filter={authentificationModalVisibilityFilters.SHOW_CHOOSE_ROLE}>Sign up</FilterLink>\n                        </li>\n                    </ul>\n                </nav> \n            </div>  \n        </header>\n    );\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport Header from './Header'\n\nclass Layout extends Component {\n    render() {\n        return (\n            <div className=\"site-wrapper\">\n                <Header />\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react';\nimport Layout from './../layout/Layout.js'\nimport {authentificationModalVisibilityFilters} from \"../../constants/authentificationModalVisibiltyFilters\";\nimport FilterLink from \"../../containers/FilterModalLink\";\n\n\nclass Homepage extends Component {\n    render() {\n        return (\n            <Layout >\n                <div className=\"homepage-banner\">\n                    <div className=\"homepage-text\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-sm-8\">\n                                    <h1 className=\"title\">Share your menus</h1>\n                                    <button className=\"normal\"><FilterLink filter={authentificationModalVisibilityFilters.SHOW_CHOOSE_ROLE}>Get started</FilterLink></button>\n                                </div>\n                            </div>\n                        </div>\n                     </div>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default Homepage;","let BACKEND = ''//\"http://thespoon.herokuapp.com\";\n\nconst paths = {\n    restApi: {\n        registrationRestaurantOwner: BACKEND + \"/api/user/owner/registration\",\n        registrationCustomer: BACKEND + \"/api/user/customer/registration\",\n        login: BACKEND + \"/api/user/login\"\n    },\n};\n\nexport default paths;","import React from 'react';\n\n\nexport const IconName = () => {\n    return (\n        <i>\n            <svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M11 0C12.4587 0 13.8576 0.579462 14.8891 1.61091C15.9205 2.64236 16.5 4.04131 16.5 5.5C16.5 6.95869 15.9205 8.35764 14.8891 9.38909C13.8576 10.4205 12.4587 11 11 11C9.54131 11 8.14236 10.4205 7.11091 9.38909C6.07946 8.35764 5.5 6.95869 5.5 5.5C5.5 4.04131 6.07946 2.64236 7.11091 1.61091C8.14236 0.579462 9.54131 0 11 0ZM11 13.75C17.0775 13.75 22 16.2112 22 19.25V22H0V19.25C0 16.2112 4.9225 13.75 11 13.75Z\" fill=\"#F3A3A3\" />\n            </svg>\n        </i>    \n    )\n}\n\n\nexport const IconLocation = () => {\n    return (\n        <i>\n            <svg width=\"16\" height=\"24\" viewBox=\"0 0 16 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M8 11.4C7.24224 11.4 6.51551 11.0839 5.9797 10.5213C5.44388 9.95871 5.14286 9.19565 5.14286 8.4C5.14286 7.60435 5.44388 6.84129 5.9797 6.27868C6.51551 5.71607 7.24224 5.4 8 5.4C8.75776 5.4 9.48449 5.71607 10.0203 6.27868C10.5561 6.84129 10.8571 7.60435 10.8571 8.4C10.8571 8.79397 10.7832 9.18407 10.6397 9.54805C10.4961 9.91203 10.2856 10.2427 10.0203 10.5213C9.755 10.7999 9.44003 11.0209 9.09338 11.1716C8.74674 11.3224 8.37521 11.4 8 11.4ZM8 0C5.87827 0 3.84344 0.884997 2.34315 2.4603C0.842855 4.03561 0 6.17218 0 8.4C0 14.7 8 24 8 24C8 24 16 14.7 16 8.4C16 6.17218 15.1571 4.03561 13.6569 2.4603C12.1566 0.884997 10.1217 0 8 0Z\" fill=\"#F3A3A3\" />\n            </svg>\n        </i>\n    )\n}\n\n\nexport const IconBirthday = () => {\n    return (\n        <i>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M12 6C13.11 6 14 5.1 14 4C14 3.62 13.9 3.27 13.71 2.97L12 0L10.29 2.97C10.1 3.27 10 3.62 10 4C10 5.1 10.9 6 12 6ZM16.6 15.99L15.53 14.92L14.45 15.99C13.15 17.29 10.87 17.3 9.56 15.99L8.49 14.92L7.4 15.99C6.75 16.64 5.88 17 4.96 17C4.23 17 3.56 16.77 3 16.39V21C3 21.55 3.45 22 4 22H20C20.55 22 21 21.55 21 21V16.39C20.44 16.77 19.77 17 19.04 17C18.12 17 17.25 16.64 16.6 15.99V15.99ZM18 9H13V7H11V9H6C4.34 9 3 10.34 3 12V13.54C3 14.62 3.88 15.5 4.96 15.5C5.48 15.5 5.98 15.3 6.34 14.93L8.48 12.8L10.61 14.93C11.35 15.67 12.64 15.67 13.38 14.93L15.52 12.8L17.65 14.93C18.02 15.3 18.51 15.5 19.03 15.5C20.11 15.5 20.99 14.62 20.99 13.54V12C21 10.34 19.66 9 18 9Z\" fill=\"#F3A3A3\" />\n            </svg>\n        </i>\n    )\n}\n\n\nexport const IconEmail = () => {\n    return (\n        <i>\n            <svg width=\"22\" height=\"18\" viewBox=\"0 0 22 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M19.8 4.4L11 9.9L2.2 4.4V2.2L11 7.7L19.8 2.2V4.4ZM19.8 0H2.2C0.979 0 0 0.979 0 2.2V15.4C0 15.9835 0.231785 16.5431 0.644365 16.9556C1.05695 17.3682 1.61652 17.6 2.2 17.6H19.8C20.3835 17.6 20.9431 17.3682 21.3556 16.9556C21.7682 16.5431 22 15.9835 22 15.4V2.2C22 0.979 21.01 0 19.8 0Z\" fill=\"#F3A3A3\" />\n            </svg>\n        </i>      \n    )\n}\n\n\n\nexport const IconPassword = () => {\n    return (\n        <i>\n            <svg width=\"17\" height=\"22\" viewBox=\"0 0 17 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M8.5 16.7619C9.06359 16.7619 9.60409 16.5412 10.0026 16.1482C10.4011 15.7553 10.625 15.2224 10.625 14.6667C10.625 13.5038 9.66875 12.5714 8.5 12.5714C7.93641 12.5714 7.39591 12.7922 6.9974 13.1851C6.59888 13.578 6.375 14.111 6.375 14.6667C6.375 15.2224 6.59888 15.7553 6.9974 16.1482C7.39591 16.5412 7.93641 16.7619 8.5 16.7619ZM14.875 7.33333C15.4386 7.33333 15.9791 7.55408 16.3776 7.94702C16.7761 8.33995 17 8.87288 17 9.42857V19.9048C17 20.4605 16.7761 20.9934 16.3776 21.3863C15.9791 21.7793 15.4386 22 14.875 22H2.125C1.56141 22 1.02091 21.7793 0.622398 21.3863C0.223883 20.9934 0 20.4605 0 19.9048V9.42857C0 8.26571 0.95625 7.33333 2.125 7.33333H3.1875V5.2381C3.1875 3.84887 3.74721 2.51654 4.74349 1.5342C5.73978 0.551869 7.09104 0 8.5 0C9.19765 0 9.88846 0.135487 10.533 0.398726C11.1775 0.661965 11.7632 1.0478 12.2565 1.5342C12.7498 2.0206 13.1411 2.59805 13.4081 3.23356C13.6751 3.86908 13.8125 4.55022 13.8125 5.2381V7.33333H14.875ZM8.5 2.09524C7.65462 2.09524 6.84387 2.42636 6.2461 3.01576C5.64832 3.60516 5.3125 4.40456 5.3125 5.2381V7.33333H11.6875V5.2381C11.6875 4.40456 11.3517 3.60516 10.7539 3.01576C10.1561 2.42636 9.34538 2.09524 8.5 2.09524Z\" fill=\"#F3A3A3\" />\n            </svg>\n        </i>\n    )\n}\n\n\nexport const IconExit = () => {\n    return (\n        <i>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M24 2.41714L21.5829 0L12 9.58286L2.41714 0L0 2.41714L9.58286 12L0 21.5829L2.41714 24L12 14.4171L21.5829 24L24 21.5829L14.4171 12L24 2.41714Z\" fill=\"black\" />\n            </svg>\n        </i>\n    )\n}\n\nexport const IconBack = () => {\n    return (\n        <i>\n            <svg width=\"15\" height=\"24\" viewBox=\"0 0 15 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M14.8 2.7641L12 0L0 11.8462L12 23.6923L14.8 20.9282L5.6 11.8462L14.8 2.7641Z\" fill=\"black\" />\n            </svg>\n        </i>\n    )\n}\n\n","import validator from 'validator';\n\nclass FormValidator {\n    constructor(validations) {\n        // validations is an array of validation rules specific to a form\n        this.validations = validations;\n    }\n\n    validate(state) {\n        // start out assuming valid\n        let validation = this.valid();\n\n        // for each validation rule\n        this.validations.forEach(rule => {\n\n            // if the field hasn't already been marked invalid by an earlier rule\n            if (!validation[rule.field].isInvalid) {\n                // determine the field value, the method to invoke and optional args from\n                // the rule definition\n                const field_value = state[rule.field].toString();\n                const args = rule.args || [];\n                const validation_method =\n                    typeof rule.method === 'string' ?\n                        validator[rule.method] :\n                        rule.method\n\n                // call the validation_method with the current field value as the first\n                // argument, any additional arguments, and the whole state as a final\n                // argument.  If the result doesn't match the rule.validWhen property,\n                // then modify the validation object for the field and set the isValid\n                // field to false\n                if(validation_method(field_value, ...args, state) !== rule.validWhen) {\n                    validation[rule.field] = { isInvalid: true, message: rule.message }\n                    validation.isValid = false;\n                }\n            }\n        });\n\n        return validation;\n    }\n\n    valid() {\n        const validation = {}\n\n        this.validations.map(rule => (\n            validation[rule.field] = { isInvalid: false, message: '' }\n        ));\n\n        return { isValid: true, ...validation };\n    }\n}\n\nexport default FormValidator;","import React, { Component } from 'react';\nimport { ajax } from 'rxjs/ajax';\nimport paths from '../../constants/paths';\nimport { IconExit, IconEmail, IconPassword } from '../Icons';\nimport {Modal, DropdownButton, Dropdown} from \"react-bootstrap\";\nimport FilterLink from \"../../containers/FilterModalLink\";\nimport {authentificationModalVisibilityFilters} from \"../../constants/authentificationModalVisibiltyFilters\";\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport Button from 'react-validation/build/button';\nimport FormValidator from \"../../validation/FormValidator\";\n\nclass LogIn extends Component {\n  constructor(props)\n  {\n    super(props);\n\n    this.validator = new FormValidator([\n      {\n        field: 'username',\n        method: 'isEmpty',\n        validWhen: false,\n        message: 'Username is required'\n      },\n      {\n        field: 'password',\n        method: 'isEmpty',\n        validWhen: false,\n        message: 'Password is required.'\n      },\n    ]);\n\n    this.state = {\n      username:'',\n      password:'',\n      isRestaurantOwner: true,\n      validation: this.validator.valid(),\n    }\n\n    this.submitted = false;\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.activateIsRestaurantOwner = this.activateIsRestaurantOwner.bind(this);\n    this.deactivateIsRestaurantOwner = this.activateIsRestaurantOwner.bind(this);\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const values = this.form.getValues();\n\n    this.setState({\n          username:values.username,\n          password:values.password,\n          isRestaurantOwner: true,\n        }, () => { //because setstate is asynchronus, further action must be taken on callback\n\n          const validation = this.validator.validate(this.state);\n          this.setState({ validation });\n          this.submitted = true;\n\n          if (validation.isValid) {\n            let thisTemp = this;\n            console.log(this.state);\n            ajax({\n              url: paths['restApi']['login'],\n              method: 'POST',\n              headers: {'Content-Type': 'application/json'},\n              body: {\n                username: this.state.username,\n                password: this.state.password,\n                isRestaurantOwner: this.state.isRestaurantOwner,\n              }\n            }).subscribe(\n                function (next) {\n                  console.log(\"Ajax step\");\n                },\n                function (error) {\n                  alert(\"Wrong username or password\");\n                },\n                function (complete) {\n                  console.log(\"you passed our validation\");\n                  thisTemp.props.onHide();\n                }\n            );\n          }\n        }\n    );\n  };\n\n  activateIsRestaurantOwner = () => {\n    this.setState({ isRestaurantOwner: true })\n  };\n\n  deactivateIsRestaurantOwner = () => {\n    this.setState({ isRestaurantOwner: false })\n  };\n\n  render() {\n    let validation = this.submitted ?                         // if the form has been submitted at least once\n        this.validator.validate(this.state) :               // then check validity every time we render\n        this.state.validation\n    return (\n        <Modal.Body>\n           <button className=\"exit\" onClick={this.props.onHide}><IconExit /></button>\n            <div className=\"sign-up\">\n              <Form ref={ (c) => { this.form = c; }} onSubmit={this.handleSubmit}>\n                <h2 className=\"title\">Log in</h2>\n                <div className=\"input-field\">\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Dropdown button\">\n                    <Dropdown.Item onClick={this.activateIsRestaurantOwner}>Restaurant Owner</Dropdown.Item>\n                    <Dropdown.Item onClick={this.deactivateIsRestaurantOwner}>Customer</Dropdown.Item>\n                  </DropdownButton>\n                </div>\n\n                <div className=\"input-field\">\n                  <IconEmail />\n                  <Input type=\"username\" id=\"username\" name=\"username\" placeholder=\"Username\"/>\n                </div>\n\n                <div className=\"input-field\">\n                  <IconPassword />\n                  <Input type=\"password\" name=\"password\" placeholder=\"Password\" />\n                </div>\n\n                <div className=\"error-block\">\n                  <small>{validation.username.message}</small>\n                  <small>{validation.password.message}</small>\n                </div>\n\n                <Button type=\"submit\" className=\"normal\">Log in</Button>\n              </Form>\n\n              <label className=\"link-wrapper\">\n                <small>Don't have an account? <FilterLink filter={authentificationModalVisibilityFilters.SHOW_CHOOSE_ROLE}>Register now</FilterLink></small>\n              </label>\n            </div>\n        </Modal.Body>\n    );\n  }\n}\nexport default LogIn;\n","export const roles = {\n    RESTAURANT_OWNER: 'restaurant owner',\n    CUSTOMER: 'customer',\n}","import React, { Component } from 'react';\nimport { IconExit } from '../Icons';\nimport { Modal } from 'react-bootstrap';\nimport {authentificationModalVisibilityFilters} from \"../../constants/authentificationModalVisibiltyFilters\";\nimport FilterLink from \"../../containers/FilterModalLink\";\n\n\n\nclass ChooseRoleModal extends Component {\n    render() {\n        return(\n                <Modal.Body>\n                    <button className=\"exit\" onClick={this.props.onHide}><IconExit /></button>\n                    <div className=\"sign-up choose-role\">\n                        <form>\n                            <h2 className=\"title\">Sign up</h2>\n                            <button className=\"wide\">\n                                <FilterLink filter={authentificationModalVisibilityFilters.SHOW_REGISTER_RESTAURANT_OWNER}>Restaurant owner</FilterLink>\n                            </button>\n                            <button className=\"wide\">\n                                <FilterLink filter={authentificationModalVisibilityFilters.SHOW_REGISTER_CUSTOMER}>Customer</FilterLink></button>\n                        </form>\n                        <label className=\"link-wrapper\">\n                            <small>Already have an account? <FilterLink filter={authentificationModalVisibilityFilters.SHOW_LOGIN}>Log in</FilterLink></small>\n                        </label>\n                    </div>\n                </Modal.Body>\n        )\n    }\n}\n\nexport default ChooseRoleModal;\n","import React, { Component } from 'react';\nimport { ajax } from 'rxjs/ajax';\nimport paths from '../../constants/paths';\nimport {IconName, IconEmail, IconPassword, IconExit, IconBack} from '../Icons';\nimport {Modal} from \"react-bootstrap\";\nimport FilterLink from \"../../containers/FilterModalLink\";\nimport {authentificationModalVisibilityFilters} from \"../../constants/authentificationModalVisibiltyFilters\";\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport FormValidator from \"../../validation/FormValidator\";\n\n\nclass RegisterRestaurantowner extends Component  {\n  constructor(props)\n  {\n    super(props);\n\n      this.validator = new FormValidator([\n      {\n          field: 'email',\n          method: 'isEmpty',\n          validWhen: false,\n          message: 'E-mail is required.'\n      },\n      {\n          field: 'email',\n          method: 'isEmail',\n          validWhen: true,\n          message: 'That is not a valid email.'\n      },\n      {\n          field: 'username',\n          method: 'isEmpty',\n          validWhen: false,\n          message: 'Username is required.'\n      },\n      {\n          field: 'firstName',\n          method: 'isEmpty',\n          validWhen: false,\n          message: 'First name is required.'\n      },\n      {\n          field: 'surname',\n          method: 'isEmpty',\n          validWhen: false,\n          message: 'Surname is required.'\n      },\n      {\n          field: 'password',\n          method: 'isEmpty',\n          validWhen: false,\n          message: 'Password is required.'\n      },\n      {\n          field: 'confirmPassword',\n          method: 'isEmpty',\n          validWhen: false,\n          message: 'Password confirmation is required.'\n      },\n      {\n          field: 'confirmPassword',\n          method: this.passwordMatch,\n          validWhen: true,\n          message: 'Confirm password has to be identical to the password.'\n      }\n  ]);\n\n      this.state = {\n          email:'',\n          username: '',\n          firstName:'',\n          surname:'',\n          password:'',\n          confirmPassword: '',\n          validation: this.validator.valid(),\n      }\n\n      this.submitted = false;\n      this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n    passwordMatch = (confirmation, state) => (state.password === confirmation);\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const values = this.form.getValues();\n\n        this.setState({\n            email:values.email,\n            username: values.username,\n            firstName: values.firstName,\n            surname: values.surname,\n            password:values.password,\n            confirmPassword: values.confirmPassword\n        }, () => { //because setstate is asynchronus, further action must be taken on callback\n\n                const validation = this.validator.validate(this.state);\n                this.setState({ validation });\n                this.submitted = true;\n\n                if (validation.isValid) {\n                    let thisTemp = this;\n                    ajax({\n                        url: paths['restApi']['registrationRestaurantOwner'],\n                        method: 'POST',\n                        headers: {'Content-Type': 'application/json'},\n                        body: {\n                            email: this.state.email,\n                            password:this.state.password,\n                            username: this.state.username,\n                            name:this.state.firstName,\n                            surname:this.state.surname\n                        }\n                    }).subscribe(\n                        function (next) {\n                            console.log(\"Ajax step\");\n                        },\n                        function (error) {\n                            alert(\"An error happened!\");\n                        },\n                        function (complete) {\n                            console.log(\"you passed our validation\");\n                            thisTemp.props.onHide();\n                        }\n                    );\n                }\n            }\n            );\n    }\n\n    render() {\n        let validation = this.submitted ?                         // if the form has been submitted at least once\n            this.validator.validate(this.state) :               // then check validity every time we render\n            this.state.validation\n        return (\n        <Modal.Body>\n            <span className=\"back\"> <FilterLink filter={authentificationModalVisibilityFilters.SHOW_CHOOSE_ROLE}><IconBack /></FilterLink></span>\n            <button className=\"exit\" onClick={this.props.onHide}><IconExit /></button>\n            <div className=\"sign-up\">\n                <Form ref={ (c) => { this.form = c; }} onSubmit={(e) => this.handleSubmit(e)}>\n                    <h2>Sign up</h2>\n                    <div className=\"account-type\">\n                        <h4>as a <span className=\"role\">{this.props.role}</span></h4>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <IconEmail />\n                        <Input type=\"email\" name=\"email\" placeholder=\"E-mail\"/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <IconName />\n                        <Input type=\"text\" name=\"username\" placeholder=\"Username\"/>\n                    </div>\n\n                      <div className=\"input-field name\">\n                        <IconName />\n                        <Input type=\"text\" name=\"firstName\" placeholder=\"First name\"/>\n                        <Input type=\"text\" name=\"surname\" placeholder=\"Surname\"/>\n                      </div>\n\n                    <div className=\"input-field\">\n                        <IconPassword />\n                        <Input type=\"password\" name=\"password\" placeholder=\"Password\"/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <IconPassword />\n                        <Input type=\"password\" id=\"confirm-password\" name=\"confirmPassword\" placeholder=\"Confirm password\"/>\n                    </div>\n\n                    <div className=\"error-block\">\n                        <small>{validation.email.message}</small>\n                        <small>{validation.username.message}</small>\n                        <small>{validation.firstName.message}</small>\n                        <small>{validation.surname.message}</small>\n                        <small>{validation.password.message}</small>\n                        <small>{validation.confirmPassword.message}</small>\n                    </div>\n\n                    <button className=\"normal\">\n                        <FilterLink filter={authentificationModalVisibilityFilters.SHOW_RESTAURANT_INFORMATION}>Continue</FilterLink>\n                    </button>\n\n                </Form>\n                <label className=\"link-wrapper\">\n                    <small>Already have an account? <FilterLink filter={authentificationModalVisibilityFilters.SHOW_LOGIN}>Log in</FilterLink></small>\n                </label>\n            </div>\n        </Modal.Body>\n    );\n  }\n}\n\nexport default RegisterRestaurantowner;\n","import React, {Component} from 'react';\nimport {IconName, IconLocation, IconBirthday, IconExit, IconBack} from '../Icons';\nimport {Modal} from \"react-bootstrap\";\nimport FilterLink from \"../../containers/FilterModalLink\";\nimport {authentificationModalVisibilityFilters} from \"../../constants/authentificationModalVisibiltyFilters\";\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport Button from 'react-validation/build/button';\n\n\nclass FillRestaurantInfo extends Component {\n    render() {\n        return (\n            <Modal.Body>\n                <span className=\"back\"> <FilterLink filter={authentificationModalVisibilityFilters.SHOW_REGISTER_RESTAURANT_OWNER}><IconBack /></FilterLink></span>\n                <button className=\"exit\" onClick={this.props.onHide}><IconExit /></button>\n                <div className=\"sign-up\">\n                    <Form ref={ (c) => { this.form = c; }} onSubmit={(e) => this.handleSubmit(e)}>\n                    <h2>Sign up</h2>\n                    <div className=\"account-type\">\n                        <h4>as a <span className=\"role\">{this.props.role}</span></h4>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <IconName />\n                        <Input type=\"restaurantName\" name=\"restaurantName\" placeholder=\"Restaurant name\"/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <IconLocation />\n                        <Input type=\"address\" name=\"address\" placeholder=\"Address\"/>\n                    </div>\n\n                    <div className=\"input-field name\">\n                        <IconLocation />\n                        <Input type=\"city\" name=\"city\" placeholder=\"City\"/>\n                        <Input type=\"country\" name=\"country\" placeholder=\"Country\"/>\n                    </div>\n\n                    <div className=\"input-field name\">\n                        <IconBirthday />\n                        <Input type=\"time\" name=\"opening-hours\"/>\n                        <Input type=\"time\" name=\"opening-hours\"/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <IconLocation />\n                        <Input type=\"tags\" name=\"tags\" placeholder=\"Tags\"/>\n                    </div>\n\n                    <Button type=\"submit\" className=\"normal\">Sign up</Button>\n                    </Form>\n                    <label className=\"link-wrapper\">\n                        <small>Already have an account? <FilterLink filter={authentificationModalVisibilityFilters.SHOW_LOGIN}>Log in</FilterLink></small>\n                    </label>\n                </div>\n            </Modal.Body>\n        )\n    }\n}\n\nexport default FillRestaurantInfo;","import React, { Component } from 'react';\nimport { ajax } from 'rxjs/ajax';\nimport paths from '../../constants/paths';\nimport {IconName, IconEmail, IconPassword, IconExit, IconBack} from '../Icons';\nimport {Modal} from \"react-bootstrap\";\nimport FilterLink from \"../../containers/FilterModalLink\";\nimport {authentificationModalVisibilityFilters} from \"../../constants/authentificationModalVisibiltyFilters\";\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport Button from 'react-validation/build/button';\nimport FormValidator from \"../../validation/FormValidator\";\n\n\nclass RegisterCustomer extends Component  {\n  constructor(props)\n  {\n    super(props);\n\n      this.validator = new FormValidator([\n      {\n          field: 'email',\n          method: 'isEmpty',\n          validWhen: false,\n          message: 'E-mail is required.'\n      },\n      {\n          field: 'email',\n          method: 'isEmail',\n          validWhen: true,\n          message: 'That is not a valid email.'\n      },\n      {\n          field: 'username',\n          method: 'isEmpty',\n          validWhen: false,\n          message: 'Username is required.'\n      },\n      {\n          field: 'password',\n          method: 'isEmpty',\n          validWhen: false,\n          message: 'Password is required.'\n      },\n      {\n          field: 'confirmPassword',\n          method: 'isEmpty',\n          validWhen: false,\n          message: 'Password confirmation is required.'\n      },\n      {\n          field: 'confirmPassword',\n          method: this.passwordMatch,\n          validWhen: true,\n          message: 'Confirm password has to be identical to the password.'\n      }\n  ]);\n\n      this.state = {\n          email:'',\n          username: '',\n          password:'',\n          confirmPassword: '',\n          validation: this.validator.valid(),\n      }\n\n      this.submitted = false;\n      this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n    passwordMatch = (confirmation, state) => (state.password === confirmation);\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const values = this.form.getValues();\n\n        this.setState({\n            email:values.email,\n            username: values.username,\n            password:values.password,\n            confirmPassword: values.confirmPassword\n        }, () => { //because setstate is asynchronus, further action must be taken on callback\n\n                const validation = this.validator.validate(this.state);\n                this.setState({ validation });\n                this.submitted = true;\n\n                if (validation.isValid) {\n                    let thisTemp = this;\n                    ajax({\n                        url: paths['restApi']['registrationCustomer'],\n                        method: 'POST',\n                        headers: {'Content-Type': 'application/json'},\n                        body: {\n                            email: this.state.email,\n                            password:this.state.password,\n                            username:this.state.username\n                        }\n                    }).subscribe(\n                        function (next) {\n                            console.log(\"Ajax step\");\n                        },\n                        function (error) {\n                            alert(\"An error happened!\");\n                        },\n                        function (complete) {\n                            console.log(\"you passed our validation\");\n                            thisTemp.props.onHide();\n                        }\n                    );\n                    console.log(\"you passed our validation\");\n                    this.props.onHide();\n                }\n            }\n            );\n    }\n\n    render() {\n        let validation = this.submitted ?                         // if the form has been submitted at least once\n            this.validator.validate(this.state) :               // then check validity every time we render\n            this.state.validation\n        return (\n        <Modal.Body>\n            <span className=\"back\"> <FilterLink filter={authentificationModalVisibilityFilters.SHOW_CHOOSE_ROLE}><IconBack /></FilterLink></span>\n            <button className=\"exit\" onClick={this.props.onHide}><IconExit /></button>\n            <div className=\"sign-up\">\n                <Form ref={ (c) => { this.form = c; }} onSubmit={(e) => this.handleSubmit(e)}>\n                    <h2>Sign up</h2>\n                    <div className=\"account-type\">\n                        <h4>as a <span className=\"role\">{this.props.role}</span></h4>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <IconEmail />\n                        <Input type=\"email\" name=\"email\" placeholder=\"E-mail\"/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <IconName />\n                        <Input type=\"text\" name=\"username\" placeholder=\"Username\"/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <IconPassword />\n                        <Input type=\"password\" name=\"password\" placeholder=\"Password\"/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <IconPassword />\n                        <Input type=\"password\" id=\"confirm-password\" name=\"confirmPassword\" placeholder=\"Confirm password\"/>\n                    </div>\n\n                    <div className=\"error-block\">\n                        <small>{validation.email.message}</small>\n                        <small>{validation.username.message}</small>\n                        <small>{validation.password.message}</small>\n                        <small>{validation.confirmPassword.message}</small>\n                    </div>\n\n                  <Button type=\"submit\" className=\"normal\" >Sign up</Button>\n                </Form>\n                <label className=\"link-wrapper\">\n                    <small>Already have an account? <FilterLink filter={authentificationModalVisibilityFilters.SHOW_LOGIN}>Log in</FilterLink></small>\n                </label>\n            </div>\n        </Modal.Body>\n    );\n  }\n}\n\nexport default RegisterCustomer;\n","import React, {Component} from \"react\";\nimport {authentificationModalVisibilityFilters} from \"../constants/authentificationModalVisibiltyFilters\";\nimport {roles} from \"../constants/roles\";\nimport {connect} from \"react-redux\";\nimport ChooseRoleModal from \"../components/authentification/ChooseRoleModal\";\nimport {Modal} from \"react-bootstrap\";\nimport {setAuthentificatonModalVisibilityFilterAction} from \"../actions/authentificationModalAction\";\nimport LogIn from \"../components/authentification/LogIn\";\nimport RegisterRestaurantowner from \"../components/authentification/RegisterRestaurantowner\";\nimport FillRestaurantInfo from \"../components/authentification/FillRestaurantInfo\"\nimport RegisterCustomer from \"../components/authentification/RegisterCustomer\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        authentificationModalVisibilityFilter: state.authentificationModalVisibilityFilter\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    handleClose: () => dispatch(setAuthentificatonModalVisibilityFilterAction(authentificationModalVisibilityFilters.HIDE_ALL))\n})\n\n\nclass AuthentificationModal extends Component {\n\n    getVisibleModal = filter => {\n        switch (filter) {\n            case authentificationModalVisibilityFilters.SHOW_LOGIN:\n                return (\n                    <LogIn onHide={() => this.props.handleClose()} />\n                )\n            case authentificationModalVisibilityFilters.SHOW_CHOOSE_ROLE:\n                return (\n                    <ChooseRoleModal onHide={() => this.props.handleClose()} />\n                )\n            case authentificationModalVisibilityFilters.SHOW_REGISTER_RESTAURANT_OWNER:\n                return (\n                    <RegisterRestaurantowner\n                        role={roles.RESTAURANT_OWNER}\n                        onHide={() => this.props.handleClose()}/>\n                )\n            case authentificationModalVisibilityFilters.SHOW_RESTAURANT_INFORMATION:\n                return (\n                    <FillRestaurantInfo\n                        role={roles.RESTAURANT_OWNER}\n                        onHide={() => this.props.handleClose()}\n                        />\n                )\n            case authentificationModalVisibilityFilters.SHOW_REGISTER_CUSTOMER:\n                return (\n                    <RegisterCustomer\n                        role={roles.CUSTOMER}\n                        onHide={() => this.props.handleClose()}/>\n                )\n            default:\n                return null;\n        }\n    }\n\n    render() {\n        return (\n            <>\n                {this.props.authentificationModalVisibilityFilter !== authentificationModalVisibilityFilters.HIDE_ALL &&\n                    <Modal show={true} onHide={() => this.props.handleClose()} centered>\n                        {this.getVisibleModal(this.props.authentificationModalVisibilityFilter)}\n                    </Modal>\n                }\n            </>\n\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AuthentificationModal)","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport HomePage from './components/homepage/Homepage.js';\nimport LogIn from './components/authentification/LogIn.js';\nimport SignUpModal from \"./containers/AuthentficationModal\";\n//import Navbar from './components/layout/Navbar.js'\n\n/* the Spoon app browser */\nfunction App() {\nreturn (\n      <BrowserRouter>\n          {<SignUpModal />}\n          <Switch>\n            <Route exact path='/' component={HomePage} />\n            <Route exact path='/' component={LogIn} />\n          </Switch>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {authentificationModalVisibilityFilters} from \"../constants/authentificationModalVisibiltyFilters\";\n\nconst authentificationModalVisibiltyFilterReducer = (state = authentificationModalVisibilityFilters.HIDE_ALL, action) => {\n    switch (action.type) {\n        case 'SET_AUTHENTIFICATION_MODAL_VISIBILITY_FILTER':\n            return action.filter\n        default:\n            return state\n    }\n}\n\nexport default authentificationModalVisibiltyFilterReducer","export const REGISTERING_ATTEMPTING = 'REGISTERING_ATTEMPTING';\nexport const REGISTERING_FAILING = 'REGISTERING_FAILING';\nexport const REGISTERING_SUCCESSING = 'REGISTERING_SUCCESSING';\nexport const LOGGING_IN_ATTEMPTING = 'LOGGING_IN_ATTEMPTING';\nexport const LOGGING_IN_FAILING = 'LOGGING_IN_FAILING';\nexport const LOGGING_IN_SUCCESSING = 'LOGGING_IN_SUCCESSING';\nexport const LOGGING_OUT = 'LOGGING_OUT';\n","import { combineReducers } from 'redux';\nimport authentificationModalVisibiltyFilterReducer from \"./authentificationModalVisibilityFilterReducer\";\nimport logInRegisterReducer from \"./loginRegisterReducer\";\n\nconst rootReducer = combineReducers({\n    authentificationModalVisibilityFilter: authentificationModalVisibiltyFilterReducer,\n    logInRegisterReducer: logInRegisterReducer\n});\n\nexport default rootReducer;\n\n","import * as LogInRegisterActions from \"../actions/logInRegisterActions\";\n\nexport default function loginRegisterReducer(state, action) {\n    switch(action.type) {\n        case LogInRegisterActions.REGISTERING_ATTEMPTING:\n            return Object.assign({}, state, {\n                role: action.role, firstName: action.firstName,\n                lastName: action.lastName, nationality: action.nationality,\n                birthday: action.birthday, eMail: action.eMail,\n                password: action.password, activePageState: 'registering'\n            });\n        case LogInRegisterActions.REGISTERING_FAILING:\n            return Object.assign({}, state, {\n                activePageState: 'registrationFailed'\n            });\n        case LogInRegisterActions.REGISTERING_SUCCESSING:\n            return Object.assign({}, state, {\n                activePageState: 'userProfile'\n            });\n        case LogInRegisterActions.LOGGING_IN_ATTEMPTING:\n            return Object.assign({}, state, {\n                eMail: action.eMail, password: action.password,\n                activePageState: 'loggingIn'\n            });\n        case LogInRegisterActions.LOGGING_IN_FAILING:\n            return Object.assign({}, state, {\n                activePageState: 'logInFailed'\n            });\n        case LogInRegisterActions.LOGGING_IN_SUCCESSING:\n            return Object.assign({}, state, {\n                activePageState: 'userProfile'\n            });\n        case LogInRegisterActions.LOGGING_OUT:\n            return Object.assign({}, state, {\n                activePageState: 'homePage'\n            });\n        default:\n            return Object.assign({}, state, {\n                activePageState: 'homePage'\n            });\n    }\n}","import { createStore } from 'redux';\nimport rootReducer from '../reducers/rootReducer';\n\nconst configureStore = () => {\n    return {\n        ...createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()),\n    }\n};\n\nexport default configureStore;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport configureStore from \"./store/configureStore\";\n\nconst store = configureStore();\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}